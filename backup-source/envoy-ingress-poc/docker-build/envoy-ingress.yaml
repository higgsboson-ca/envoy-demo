static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8443
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: httpsbackend
              domains:
              # - "*"    # IP and domain name are all allowed.
              # - "etapp.interac.ca:8443"   # IP not allowed. only domain name is allowed.
              - "etapi-mtls.etapp.internal:8443"   # IP not allowed. only domain name is allowed.
              routes:
              - match:
                  prefix: "/devnull"
                route:
                  cluster: devnull-service
              - match:
                  prefix: "/mock-domain" # a test for mock-domain
                route:
                  cluster: mock-domain
              - match:
                  prefix: "/jwt-test" # a test for jwt
                route:
                  cluster: mock-domain
              - match:
                  prefix: "/xmlproxy/ws" # for API 3.4.x & 3.5.x
                route:
                  cluster: content-router
              - match:
                  path: "/xmlproxy/HttpMessageProxy" # for API 1.x
                route:
                  cluster: content-router
              - match:
                  prefix: "/direct-response"
                direct_response:
                  status: 200
              - match:
                  path: "/xmlproxy/20" #for API 2.x"
                route:
                  cluster: content-router
          http_filters:
          - name: envoy.router  # this is the default http filter. it must present. Or, the non-matching prefix will no longer respond.
            config: {}
          forward_client_cert_details: APPEND_FORWARD
          set_current_client_cert_details: &certForwardDetails
            subject: true
      tls_context: &tlsConfig
        common_tls_context:
          tls_certificates:
            - certificate_chain:
                filename: "/home/bnlapp/envoy-ingress/envoy-ingress/ssl/etapi-mtls.etapp.internal.crt"
              private_key:
                filename: "/home/bnlapp/envoy-ingress/envoy-ingress/ssl/etapi-mtls.etapp.internal.key"
              password:
                inline_string: "etapp"
          validation_context:
            trusted_ca:
              filename: /etc/ssl/certs/ca-certificates.crt
            verify_certificate_spki:
              - "fbTEns25Y2DmPWQByYRP/X0EQsJknRxW7HQW0HsFeDY=" # for 001
              - "qzXpXiQwRj0o2znS0E1dHANId6oX9reO933AUDwxkA4=" # for fi001-client
        require_client_certificate: true
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 18443
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: httpsbackend
              domains:
              # - "*"    # IP and domain name are all allowed.
              # - "etapp.interac.ca:8443"   # IP not allowed. only domain name is allowed.
              - "etapi-mtls.etapp.internal:18443"   # IP not allowed. only domain name is allowed.
              routes:
              # Identified Participant Routes
              - match:
                  headers: [{ name: "x-et-participant-id", exact_match: "CA000001" }]
                  prefix: "/xmlproxy/"
                route:
                  cluster: devnull-service
              - match:
                  headers: [{ name: "x-et-participant-id", exact_match: "CA000003" }]
                  prefix: "/xmlproxy/"
                route:
                  cluster: devnull-service
              # General Routes
              - match:
                  prefix: "/xmlproxy/"
                route:
                  cluster: content-router
              - match:
                  prefix: "/devnull"
                route:
                  cluster: devnull-service
              - match:
                  prefix: "/mock-domain" # a test for mock-domain
                route:
                  cluster: mock-domain
              - match:
                  prefix: "/jwt-test" # a test for jwt
                route:
                  cluster: mock-domain
          http_filters:
          - name: envoy.filters.http.jwt_authn
            config:
              providers:
                jwt_provider_cert_pub_key:
                  local_jwks:
                    filename: "/home/bnlapp/envoy-ingress/envoy-ingress/ssl/envoy-ingress-jws-share.json"
                  from_headers:
                  - name: x-et-api-signature
                  forward: false
                  forward_payload_header: "etint-ingress-jws-digest"
              rules:
              - match:
                  headers: [{ name: "x-et-api-signature", present_match: true }]
                  prefix: /
                requires:
                  provider_name: jwt_provider_cert_pub_key
          - name: envoy.lua
            config:
              inline_code: |
                loadfile("/home/bnlapp/envoy-ingress/envoy-ingress/conf/content_router.lua")()
          - name: envoy.router  # this is the default http filter. it must present. Or, the non-matching prefix will no longer respond.
            config: {}
          forward_client_cert_details: APPEND_FORWARD
          set_current_client_cert_details: *certForwardDetails
      tls_context: *tlsConfig
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 18000
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: httpbackend
              domains:
              - "*"    # IP and domain name are all allowed.
              routes:
              - match:
                  prefix: "/jwt-test-baseline"
                response_headers_to_add:
                  - header:
                      key: "x-baseline"
                      value: "true"
                direct_response:
                  status: 200
                  body:
                    inline_string: "Baseline test successful"
              - match:
                  headers: [{ name: "etint-ingress-jws-digest", present_match: true }]
                  prefix: "/jwt-payload-test" # a test for jwt
                direct_response:
                  status: 200
                  body:
                    inline_string: "Jwt verified"
              - match:
                  prefix: "/"
                direct_response:
                  status: 403
                  body:
                    inline_string: "Invalid Jwt or Missing"
          http_filters:
          - name: envoy.lua
            config:
              inline_code: |
                loadfile("/home/bnlapp/envoy-ingress/envoy-ingress/conf/jwt_detached_router.lua")()
          - name: envoy.filters.http.jwt_authn
            config:
              providers:
                jwt_provider_cert_pub_key:
                  local_jwks:
                    filename: "/home/bnlapp/envoy-ingress/envoy-ingress/ssl/envoy-ingress-jws-share.json"
                  from_headers:
                  - name: x-et-api-signature
                  forward: true
                  forward_payload_header: "etint-ingress-jws-digest"
              rules:
              - match:
                  headers: [{ name: "x-et-api-signature", present_match: true }]
                  prefix: /
                requires:
                  provider_name: jwt_provider_cert_pub_key
          - name: envoy.router  # this is the default http filter. it must present. Or, the non-matching prefix will no longer respond.
            config: {}
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 28000
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: httpbackend
              domains:
              - "*"    # IP and domain name are all allowed.
              routes:
              - match:
                  prefix: "/jwt-test-baseline"
                response_headers_to_add:
                  - header:
                      key: "x-baseline"
                      value: "true"
                direct_response:
                  status: 200
                  body:
                    inline_string: "Baseline test successful"
              - match:
                  headers: [{ name: "etint-ingress-jws-digest", present_match: true }]
                  prefix: "/jwt-test" # a test for jwt
                direct_response:
                  status: 200
                  body:
                    inline_string: "Jwt verified"
              - match:
                  prefix: "/"
                direct_response:
                  status: 403
                  body:
                    inline_string: "Invalid Jwt or Missing"
          http_filters:
          - name: envoy.filters.http.jwt_authn
            config:
              providers:
                jwt_provider_cert_pub_key:
                  local_jwks:
                    filename: "/home/bnlapp/envoy-ingress/envoy-ingress/ssl/envoy-ingress-jws-share.json"
                  from_headers:
                  - name: x-et-api-signature
                  forward: false
                  forward_payload_header: "etint-ingress-jws-digest"
              rules:
              - match:
                  headers: [{ name: "x-et-api-signature", present_match: true }]
                  prefix: /
                requires:
                  provider_name: jwt_provider_cert_pub_key
          - name: envoy.lua
            config:
              inline_code: |
                loadfile("/home/bnlapp/envoy-ingress/envoy-ingress/conf/content_router.lua")()
          - name: envoy.router  # this is the default http filter. it must present. Or, the non-matching prefix will no longer respond.
            config: {}
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8000
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            virtual_hosts:
            - name: httpbackend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/echo-service"
                route:
                  cluster: echo-service
              - match:
                  prefix: "/mock-domain" # let mock-domain still be HTTP
                route:
                  cluster: mock-domain
              - match:
                  prefix: "/direct-response"
                direct_response:
                  status: 200
              - match:
                  prefix: "/jwt-test"
                route:
                  cluster: jwt-processor
              - match:
                  prefix: "/jwt-payload-test"
                route:
                  cluster: jwt-processor
              - match:
                  prefix: "/jwt-test-baseline"
                route:
                  cluster: jwt-processor
              - match:
                  prefix: "/xmlproxy"
                redirect:
                  port_redirect: 8443
                  https_redirect: true
              - match:
                  prefix: "/xmlproxy/"  # need both with slash and without slash to be defined.
                redirect:
                  port_redirect: 8443
                  https_redirect: true
          http_filters:
          - name: envoy.router
            config: {}
  clusters:
  - name: xmlproxy-ca000001
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    hosts:
    - socket_address:
        address: echo-service
        port_value: 80
  - name: xmlproxy-ca000003
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    hosts:
    - socket_address:
        address: echo-service
        port_value: 80
  - name: echo-service
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    hosts:
    - socket_address:
        address: echo-service
        port_value: 80
  - name: jwt-processor
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    hosts:
    - socket_address:
        address: jwt-processor
        port_value: 8080
  - name: devnull-service
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    hosts:
    - socket_address:
        address: devnull-service
        port_value: 8080
  - name: mock-domain
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    hosts:
    - socket_address:
        address: mock-domain
        port_value: 10080
  - name: mock-domain-rbc
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    hosts:
    - socket_address:
        address: mock-domain
        port_value: 10090
  - name: content-router
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    hosts:
    - socket_address:
        address: content-router
        port_value: 8080
admin:
  access_log_path: "/home/bnlapp/envoy-ingress/envoy-ingress/logs/envoy_access.log"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001