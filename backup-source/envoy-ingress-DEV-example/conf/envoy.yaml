# =====================================================
# envoy-ingress qasit configuration
# =====================================================
static_resources:
  listeners:
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 8080
      filter_chains:
      - filters:
        - name: envoy.http_connection_manager
          typed_config:
            "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
            stat_prefix: vip_http
            codec_type: auto
            route_config:
              name: vip_router
              virtual_hosts:
                - name: ingress_host
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: /ir-api/v3.5.0/
                    route:
                      cluster: ir-router
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      prefix: /customer-api/v3.5.0/
                    route:
                      cluster: customer-router
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      prefix: /fraud-api/v3.5.0/
                    route:
                      cluster: fraud-router
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      prefix: /request-api/v3.5.0/
                    route:
                      cluster: request-router
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      prefix: /system-service-api/v3.5.0/
                    route:
                      cluster: system-service-router
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      prefix: /notification-api/v3.5.0/
                    route:
                      cluster: notification-registration-router
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      prefix: /registration-api/v3.5.0/
                    route:
                      cluster: registration-router
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      prefix: /payment-api/v3.5.0/
                    route:
                      cluster: payments-router
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      headers:
                      - name: etint-complex-read-transaction
                        present_match: true
                      prefix: /xmlproxy/ws/3.4.1/manageTransfer
                    route:
                      cluster: legacy-router
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      prefix: /xmlproxy/ws/3.4.1/
                    route:
                      cluster: inbound-legacy
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
            http_filters:
              - name: envoy.health_check
                typed_config:
                  "@type": type.googleapis.com/envoy.config.filter.http.health_check.v2.HealthCheck
                  pass_through_mode: false
                  cluster_min_healthy_percentages:
                    ir-router: { value: 100 }
                    customer-router: { value: 100 }
                    fraud-router: { value: 100 }
                    request-router: { value: 100 }
                    system-service-router: { value: 100 }
                    notification-registration-router: { value: 100 }
                    registration-router: { value: 100 }
                    payments-router: { value: 100 }
                    legacy-router: { value: 100 }
                    ir-core: { value: 100 }
                    data-services: { value: 100 }
                  headers:
                    - name: ":path"
                      exact_match: "/healthcheck"
              - name: envoy.lua
                config:
                  inline_code: |
                    loadfile("/etransfer/esg/conf/preprocessor.lua")()
              - name: envoy.filters.http.jwt_authn
                config:
                  providers:
                    ca000001-validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/ca000001-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                    ca000002-validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/ca000002-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                    ca000003-validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/ca000003-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                    ca000004-validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/ca000004-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                    ca000006-validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/ca000006-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                    ca000010-validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/ca000010-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                    ca000090-validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/ca000090-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                    ca000091-validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/ca000091-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                    ca000092-validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/ca000092-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                    default_signature_validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/common-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                  rules:
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        - exact_match: CA000001
                          name: x-et-participant-id
                        prefix: /
                      requires:
                        provider_name: ca000001-validator
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        - exact_match: CA000002
                          name: x-et-participant-id
                        prefix: /
                      requires:
                        provider_name: ca000002-validator
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        - exact_match: CA000003
                          name: x-et-participant-id
                        prefix: /
                      requires:
                        provider_name: ca000003-validator
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        - exact_match: CA000004
                          name: x-et-participant-id
                        prefix: /
                      requires:
                        provider_name: ca000004-validator
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        - exact_match: CA000006
                          name: x-et-participant-id
                        prefix: /
                      requires:
                        provider_name: ca000006-validator
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        - exact_match: CA000010
                          name: x-et-participant-id
                        prefix: /
                      requires:
                        provider_name: ca000010-validator
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        - exact_match: CA000090
                          name: x-et-participant-id
                        prefix: /
                      requires:
                        provider_name: ca000090-validator
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        - exact_match: CA000091
                          name: x-et-participant-id
                        prefix: /
                      requires:
                        provider_name: ca000091-validator
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        - exact_match: CA000092
                          name: x-et-participant-id
                        prefix: /
                      requires:
                        provider_name: ca000092-validator
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        prefix: /
                      requires:
                        provider_name: default_signature_validator
              - name: envoy.lua
                config:
                  inline_code: |
                    loadfile("/etransfer/esg/conf/content_router.lua")()
              - name: envoy.router
                config: {}
            access_log:
              - name: envoy.file_access_log
                config:
                  format: '[%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
                    %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%
                    "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-ET-PARTICIPANT-ID)% - %REQ(X-ET-REQUEST-ID)%
                    - %REQ(X-REQUEST-ID)%" "%REQ(X-ET-PARTICIPANT-USER-ID)%" "%REQ(X-ET-INDIRECT-CONNECTOR-ID)%"
                    "%REQ(ETINT-INGRESS-ROUTER)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"

                    '
                  path: /dev/stdout
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 8443
      filter_chains:
      - filters:
        - name: envoy.http_connection_manager
          typed_config:
            "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
            stat_prefix: ingress_http
            codec_type: auto
            route_config:
              name: ingress_router
              virtual_hosts:
                - name: ingress_host
                  domains:
                  - "etapi-mtls.etapp.internal:8443"
                  routes:
                  - match:
                      prefix: /ir-api/v3.5.0/
                    route:
                      cluster: ir-router
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      prefix: /customer-api/v3.5.0/
                    route:
                      cluster: customer-router
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      prefix: /fraud-api/v3.5.0/
                    route:
                      cluster: fraud-router
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      prefix: /request-api/v3.5.0/
                    route:
                      cluster: request-router
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      prefix: /system-service-api/v3.5.0/
                    route:
                      cluster: system-service-router
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      prefix: /notification-api/v3.5.0/
                    route:
                      cluster: notification-registration-router
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      prefix: /registration-api/v3.5.0/
                    route:
                      cluster: registration-router
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      prefix: /payment-api/v3.5.0/
                    route:
                      cluster: payments-router
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      headers:
                      - name: etint-complex-read-transaction
                        present_match: true
                      prefix: /xmlproxy/ws/3.4.1/manageTransfer
                    route:
                      cluster: legacy-router
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      prefix: /xmlproxy/ws/3.4.1/
                    route:
                      cluster: inbound-legacy
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
            http_filters:
              - name: envoy.filters.http.jwt_authn
                config:
                  providers:
                    ca000001-validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/ca000001-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                    ca000002-validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/ca000002-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                    ca000003-validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/ca000003-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                    ca000004-validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/ca000004-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                    ca000006-validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/ca000006-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                    ca000010-validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/ca000010-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                    ca000090-validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/ca000090-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                    ca000091-validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/ca000091-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                    ca000092-validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/ca000092-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                    default_signature_validator:
                      local_jwks:
                        filename: "/keys/public/esg/jwks/common-jwks.json"
                      from_headers:
                        - name: x-et-api-signature
                      forward: true
                      forward_payload_header: "etint-ingress-jws-digest"
                  rules:
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        - exact_match: CA000001
                          name: x-et-participant-id
                        prefix: /
                      requires:
                        provider_name: ca000001-validator
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        - exact_match: CA000002
                          name: x-et-participant-id
                        prefix: /
                      requires:
                        provider_name: ca000002-validator
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        - exact_match: CA000003
                          name: x-et-participant-id
                        prefix: /
                      requires:
                        provider_name: ca000003-validator
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        - exact_match: CA000004
                          name: x-et-participant-id
                        prefix: /
                      requires:
                        provider_name: ca000004-validator
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        - exact_match: CA000006
                          name: x-et-participant-id
                        prefix: /
                      requires:
                        provider_name: ca000006-validator
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        - exact_match: CA000010
                          name: x-et-participant-id
                        prefix: /
                      requires:
                        provider_name: ca000010-validator
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        - exact_match: CA000090
                          name: x-et-participant-id
                        prefix: /
                      requires:
                        provider_name: ca000090-validator
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        - exact_match: CA000091
                          name: x-et-participant-id
                        prefix: /
                      requires:
                        provider_name: ca000091-validator
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        - exact_match: CA000092
                          name: x-et-participant-id
                        prefix: /
                      requires:
                        provider_name: ca000092-validator
                    - match:
                        headers:
                        - exact_match: PAYLOAD_DIGEST_SHA256
                          name: x-et-api-signature-type
                        prefix: /
                      requires:
                        provider_name: default_signature_validator
              - name: envoy.lua
                config:
                  inline_code: |
                    loadfile("/etransfer/esg/conf/content_router.lua")()
              - name: envoy.router
                config: {}
            access_log:
              - name: envoy.file_access_log
                config:
                  format: '[%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
                    %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%
                    "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-ET-PARTICIPANT-ID)% - %REQ(X-ET-REQUEST-ID)%
                    - %REQ(X-REQUEST-ID)%" "%REQ(X-ET-PARTICIPANT-USER-ID)%" "%REQ(X-ET-INDIRECT-CONNECTOR-ID)%"
                    "%REQ(ETINT-INGRESS-ROUTER)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"

                    '
                  path: /dev/stdout
            forward_client_cert_details: APPEND_FORWARD
            set_current_client_cert_details:
              subject: true
        tls_context:
          common_tls_context:
            tls_certificates:
              - certificate_chain:
                  filename: "/keys/public/esg/etapi-mtls.etapp.internal.crt"
                private_key:
                  filename: "/keys/private/esg/etapi-mtls.etapp.internal.key"
            validation_context:
              trusted_ca:
                filename: "/etc/ssl/certs/ca-certificates.crt"
              # verify_certificate_spki:
              #   - "<base64-encoded-publickey-hash>"
          require_client_certificate: true
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 8888
      filter_chains:
      - filters:
        - name: envoy.http_connection_manager
          typed_config:
            "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
            stat_prefix: sidecar_http
            codec_type: auto
            route_config:
              name: sidecar_router
              virtual_hosts:
                - name: sidecar_host
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: /remittance
                    route:
                      cluster: ir-core
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      prefix: /data-service/v1.0
                    route:
                      cluster: data-services
                      retry_policy:
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      prefix: /notification-registration-service/v1.0
                    route:
                      cluster: notification-registration-service
                  - match:
                      headers:
                      - exact_match: REALTIME_FULFILL_REQUEST_FOR_PAYMENT
                        name: x-payment-type
                      prefix: /payment-service/v1.0
                    route:
                      cluster: payments-core
                  - match:
                      headers:
                      - exact_match: REALTIME_ACCOUNT_ALIAS_PAYMENT
                        name: x-payment-type
                      prefix: /payment-service/v1.0
                    route:
                      cluster: payments-core
                  - match:
                      headers:
                      - exact_match: REALTIME_ACCOUNT_DEPOSIT_PAYMENT
                        name: x-payment-type
                      prefix: /payment-service/v1.0
                    route:
                      cluster: payments-core
                  - match:
                      prefix: /cs/
                    route:
                      cluster: inbound-legacy
                      retry_policy: &id001
                        num_retries: 0
                        per_try_timeout: 120s
                        retry_on: 5xx
                      timeout: 120s
                  - match:
                      prefix: /registration-service/v1.0
                    route:
                      cluster: inbound-legacy
                      retry_policy: *id001
                      timeout: 120s
                  - match:
                      prefix: /1.0v/system-services-api
                    route:
                      cluster: inbound-legacy
                      retry_policy: *id001
                      timeout: 120s
                  - match:
                      prefix: /payment-service/v1.0
                    route:
                      cluster: inbound-legacy
                      retry_policy: *id001
                      timeout: 120s
            http_filters:
              - name: envoy.router
                config: {}
            access_log:
              - name: envoy.file_access_log
                config:
                  format: '[%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
                    %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%
                    "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-ET-PARTICIPANT-ID)% - %REQ(X-ET-REQUEST-ID)%
                    - %REQ(X-REQUEST-ID)%" "%REQ(X-ET-PARTICIPANT-USER-ID)%" "%REQ(X-ET-INDIRECT-CONNECTOR-ID)%"
                    "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"

                    '
                  path: /dev/stdout
  clusters:
    - name: ir-router
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: ir-router
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: ir-router
                      port_value: 8080
      health_checks:
        - http_health_check:
            path: /ir-api/v3.5.0/health
          always_log_health_check_failures: true
          event_log_path: /dev/stdout
          healthy_threshold: 1
          interval: 10s
          interval_jitter: 1s
          no_traffic_interval: 30s
          timeout: 2s
          unhealthy_interval: 10s
          unhealthy_threshold: 2
      drain_connections_on_host_removal: true
      circuit_breakers:
        thresholds:
        - max_connections: 10000
          max_pending_requests: 10000
          max_requests: 10000
          max_retries: 0
          priority: DEFAULT
    - name: ir-core
      connect_timeout: 0.25s
      type: static
      lb_policy: round_robin
      load_assignment:
        cluster_name: ir-core
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 10.5.61.30
                      port_value: 443
      health_checks:
        - tcp_health_check: {}
          always_log_health_check_failures: true
          event_log_path: /dev/stdout
          healthy_threshold: 1
          interval: 10s
          interval_jitter: 1s
          no_traffic_interval: 30s
          timeout: 2s
          unhealthy_interval: 10s
          unhealthy_threshold: 2
      drain_connections_on_host_removal: true
      circuit_breakers:
        thresholds:
        - max_connections: 10000
          max_pending_requests: 10000
          max_requests: 10000
          max_retries: 0
          priority: DEFAULT
      tls_context:
        common_tls_context:
          validation_context:
            trusted_ca:
              filename: "/etc/ssl/certs/ca-certificates.crt"
        sni: etransfer-ir-api.qasit.interac.ca
    - name: customer-router
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: customer-router
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: customer-router
                      port_value: 8080
      health_checks:
        - http_health_check:
            path: /customer-api/v3.5.0/health
          always_log_health_check_failures: true
          event_log_path: /dev/stdout
          healthy_threshold: 1
          interval: 10s
          interval_jitter: 1s
          no_traffic_interval: 30s
          timeout: 2s
          unhealthy_interval: 10s
          unhealthy_threshold: 2
      drain_connections_on_host_removal: true
      circuit_breakers:
        thresholds:
        - max_connections: 10000
          max_pending_requests: 10000
          max_requests: 10000
          max_retries: 0
          priority: DEFAULT
    - name: fraud-router
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: fraud-router
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: fraud-router
                      port_value: 8080
      health_checks:
        - http_health_check:
            path: /fraud-api/v3.5.0/health
          always_log_health_check_failures: true
          event_log_path: /dev/stdout
          healthy_threshold: 1
          interval: 10s
          interval_jitter: 1s
          no_traffic_interval: 30s
          timeout: 2s
          unhealthy_interval: 10s
          unhealthy_threshold: 2
      drain_connections_on_host_removal: true
      circuit_breakers:
        thresholds:
        - max_connections: 10000
          max_pending_requests: 10000
          max_requests: 10000
          max_retries: 0
          priority: DEFAULT
    - name: request-router
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: request-router
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: request-router
                      port_value: 8080
      health_checks:
        - http_health_check:
            path: /request-api/v3.5.0/health
          always_log_health_check_failures: true
          event_log_path: /dev/stdout
          healthy_threshold: 1
          interval: 10s
          interval_jitter: 1s
          no_traffic_interval: 30s
          timeout: 2s
          unhealthy_interval: 10s
          unhealthy_threshold: 2
      drain_connections_on_host_removal: true
      circuit_breakers:
        thresholds:
        - max_connections: 10000
          max_pending_requests: 10000
          max_requests: 10000
          max_retries: 0
          priority: DEFAULT
    - name: system-service-router
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: system-service-router
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: system-service-router
                      port_value: 8080
      health_checks:
        - http_health_check:
            path: /system-service-api/v3.5.0/health
          always_log_health_check_failures: true
          event_log_path: /dev/stdout
          healthy_threshold: 1
          interval: 10s
          interval_jitter: 1s
          no_traffic_interval: 30s
          timeout: 2s
          unhealthy_interval: 10s
          unhealthy_threshold: 2
      drain_connections_on_host_removal: true
      circuit_breakers:
        thresholds:
        - max_connections: 10000
          max_pending_requests: 10000
          max_requests: 10000
          max_retries: 0
          priority: DEFAULT
    - name: notification-registration-router
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: notification-registration-router
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: notification-registration-router
                      port_value: 8080
      health_checks:
        - http_health_check:
            path: /notification-api/v3.5.0/health
          always_log_health_check_failures: true
          event_log_path: /dev/stdout
          healthy_threshold: 1
          interval: 10s
          interval_jitter: 1s
          no_traffic_interval: 30s
          timeout: 2s
          unhealthy_interval: 10s
          unhealthy_threshold: 2
      drain_connections_on_host_removal: true
      circuit_breakers:
        thresholds:
        - max_connections: 10000
          max_pending_requests: 10000
          max_requests: 10000
          max_retries: 0
          priority: DEFAULT
    - name: notification-registration-service
      connect_timeout: 0.25s
      type: static
      lb_policy: round_robin
      load_assignment:
        cluster_name: notification-registration-service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 10.5.61.33
                      port_value: 443
      drain_connections_on_host_removal: true
      tls_context:
        common_tls_context:
          validation_context:
            trusted_ca:
              filename: "/etc/ssl/certs/ca-certificates.crt"
        sni: etransfer-notification-api.qasit.interac.ca
    - name: registration-router
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: registration-router
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: registration-router
                      port_value: 8080
      health_checks:
        - http_health_check:
            path: /registration-api/v3.5.0/health
          always_log_health_check_failures: true
          event_log_path: /dev/stdout
          healthy_threshold: 1
          interval: 10s
          interval_jitter: 1s
          no_traffic_interval: 30s
          timeout: 2s
          unhealthy_interval: 10s
          unhealthy_threshold: 2
      drain_connections_on_host_removal: true
      circuit_breakers:
        thresholds:
        - max_connections: 10000
          max_pending_requests: 10000
          max_requests: 10000
          max_retries: 0
          priority: DEFAULT
    - name: payments-router
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: payments-router
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: payments-router
                      port_value: 8080
      health_checks:
        - http_health_check:
            path: /payment-api/v3.5.0/health
          always_log_health_check_failures: true
          event_log_path: /dev/stdout
          healthy_threshold: 1
          interval: 10s
          interval_jitter: 1s
          no_traffic_interval: 30s
          timeout: 2s
          unhealthy_interval: 10s
          unhealthy_threshold: 2
      drain_connections_on_host_removal: true
      circuit_breakers:
        thresholds:
        - max_connections: 10000
          max_pending_requests: 10000
          max_requests: 10000
          max_retries: 0
          priority: DEFAULT
    - name: payments-core
      connect_timeout: 0.25s
      type: static
      lb_policy: round_robin
      load_assignment:
        cluster_name: payments-core
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 10.5.61.34
                      port_value: 443
      drain_connections_on_host_removal: true
      tls_context:
        common_tls_context:
          validation_context:
            trusted_ca:
              filename: "/etc/ssl/certs/ca-certificates.crt"
        sni: etransfer-inbound-payment-api.qasit.interac.ca
    - name: legacy-router
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: legacy-router
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: legacy-router
                      port_value: 8080
      health_checks:
        - http_health_check:
            path: /legacy-api/v3.4.1/health
          always_log_health_check_failures: true
          event_log_path: /dev/stdout
          healthy_threshold: 1
          interval: 10s
          interval_jitter: 1s
          no_traffic_interval: 30s
          timeout: 2s
          unhealthy_interval: 10s
          unhealthy_threshold: 2
      drain_connections_on_host_removal: true
      circuit_breakers:
        thresholds:
        - max_connections: 10000
          max_pending_requests: 10000
          max_requests: 10000
          max_retries: 0
          priority: DEFAULT
    - name: data-services
      connect_timeout: 0.25s
      type: static
      lb_policy: round_robin
      load_assignment:
        cluster_name: data-services
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 10.5.61.35
                      port_value: 443
      health_checks:
        - tcp_health_check: {}
          always_log_health_check_failures: true
          event_log_path: /dev/stdout
          healthy_threshold: 1
          interval: 10s
          interval_jitter: 1s
          no_traffic_interval: 30s
          timeout: 2s
          unhealthy_interval: 10s
          unhealthy_threshold: 2
      drain_connections_on_host_removal: true
      circuit_breakers:
        thresholds:
        - max_connections: 10000
          max_pending_requests: 10000
          max_requests: 10000
          max_retries: 0
          priority: DEFAULT
      tls_context:
        common_tls_context:
          validation_context:
            trusted_ca:
              filename: "/etc/ssl/certs/ca-certificates.crt"
        sni: etransfer-data-service.qasit.interac.ca
    - name: inbound-legacy
      connect_timeout: 0.25s
      type: static
      lb_policy: round_robin
      load_assignment:
        cluster_name: inbound-legacy
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 10.5.61.28
                      port_value: 443
      health_checks:
        - tcp_health_check: {}
          always_log_health_check_failures: true
          event_log_path: /dev/stdout
          healthy_threshold: 1
          interval: 10s
          interval_jitter: 1s
          no_traffic_interval: 30s
          timeout: 2s
          unhealthy_interval: 10s
          unhealthy_threshold: 2
      drain_connections_on_host_removal: true
      circuit_breakers:
        thresholds:
        - max_connections: 10000
          max_pending_requests: 10000
          max_requests: 10000
          max_retries: 0
          priority: DEFAULT
      tls_context:
        common_tls_context:
          validation_context:
            trusted_ca:
              filename: "/etc/ssl/certs/ca-certificates.crt"
        sni: etransfer-inbound-processing-api.qasit.interac.ca
cluster_manager:
  outlier_detection:
    event_log_path: /dev/stdout
admin:
  access_log_path: /dev/stdout
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001

